name: Build and Test Pac-Man Game

# Desencadenador para que se ejecute con cambios en la rama 'main' o cuando haya un pull request
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Trabajo para construir, probar y desplegar el juego
  build_and_test:
    runs-on: ubuntu-latest  # Establece el entorno de ejecución

    steps:
      # Paso 1: Verificar el código
      - name: Checkout code
        uses: actions/checkout@v2  # Obtiene el código del repositorio

      # Paso 2: Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'  # Elige la versión de Python que usarás (puedes usar cualquier versión compatible con Pygame)

      # Paso 3: Instalar dependencias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip  # Actualiza pip
          pip install pygame  # Instala Pygame y otras dependencias que necesites para el juego
          pip install -r requirements.txt  # Si tienes un archivo requirements.txt con otras dependencias

      # Paso 4: Ejecutar pruebas (si tienes pruebas para tu juego)
      - name: Run tests
        run: |
          # Ejecuta tus pruebas automatizadas (puedes usar pytest o unittest si tienes pruebas configuradas)
          pytest tests/  # Asume que tienes pruebas en el directorio 'tests/'

      # Paso 5: Crear el juego (compilar si es necesario o prepararlo para el despliegue)
      - name: Build the game
        run: |
          python pacman.py  # Llama al archivo principal del juego para asegurarte de que se ejecuta correctamente

      # Paso 6: Desplegar el juego (si es necesario)
      # Aquí puedes agregar pasos para subir el juego a algún servidor o despliegue
      - name: Deploy the game (opcional)
        run: |
          # Ejemplo de cómo podrías desplegar el juego (por ejemplo, subirlo a un servidor web)
          scp pacman_game.tar.gz user@server:/path/to/deploy
